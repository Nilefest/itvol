-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Хост: localhost:3306
-- Время создания: Сен 20 2019 г., 14:46
-- Версия сервера: 5.7.24-27
-- Версия PHP: 7.2.7

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `u0701138_itvol`
--

-- --------------------------------------------------------

--
-- Структура таблицы `lab`
--

CREATE TABLE `lab` (
  `id` int(11) NOT NULL,
  `name` varchar(250) NOT NULL DEFAULT 'Лабораторна робота',
  `title` varchar(250) NOT NULL DEFAULT '',
  `target` text NOT NULL,
  `description` text NOT NULL,
  `tags` text NOT NULL,
  `date` varchar(10) NOT NULL DEFAULT '2019-01-01',
  `teacher_id` int(11) NOT NULL DEFAULT '0',
  `view` int(11) NOT NULL DEFAULT '0',
  `download` int(11) NOT NULL DEFAULT '0',
  `type` varchar(10) NOT NULL DEFAULT 'lab'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `lab`
--

INSERT INTO `lab` (`id`, `name`, `title`, `target`, `description`, `tags`, `date`, `teacher_id`, `view`, `download`, `type`) VALUES
(11, 'Лабораторна робота №6', 'Створення проекту ПО і розподіл навантаження на учасників', 'Для заданого варіанту розробити і обгрунтувати: 1. Архітектуру ПО; 2. Модель життєвого циклу; 3. Структуру даних; 4. Структуру класів і міжкласової взаємодії; 5. Розподіл заданого навантаження між учасниками; 6. Плани робіт для кожного з учасників проекту (діаграми Ганта).', 'Діаграма Ганта (англ. Gantt chart, також стрічкова діаграма, графік Ганта) - це популярний тип стовпчастих діаграм, який використовується для ілюстрації плану, графіка робіт з якого-небудь проекту. Є одним з методів планування проектів. Використовується як в десктоп системах, так в веб-додатках з управління проектами.', 'Лаб 6, Лабораторна робота 6, Діаграма Ганта', '2019-06-22', 1, 24, 0, 'lab');

-- --------------------------------------------------------

--
-- Структура таблицы `lecture`
--

CREATE TABLE `lecture` (
  `id` int(11) NOT NULL,
  `title` varchar(250) NOT NULL DEFAULT 'Лекція',
  `description` text NOT NULL,
  `tags` text NOT NULL,
  `date` varchar(10) NOT NULL,
  `teacher_id` int(11) NOT NULL DEFAULT '0',
  `view` int(11) NOT NULL DEFAULT '0',
  `download` int(11) NOT NULL DEFAULT '0',
  `type` varchar(10) NOT NULL DEFAULT 'lecture'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `lecture`
--

INSERT INTO `lecture` (`id`, `title`, `description`, `tags`, `date`, `teacher_id`, `view`, `download`, `type`) VALUES
(4, 'Складність програмного забезечення', '', 'Програмне забезпечення', '2019-05-07', 3, 88, 0, 'lecture'),
(5, 'Життєвий цикл ПЗ', '', 'Програмне забезпечення', '2019-05-07', 3, 53, 0, 'lecture'),
(6, 'Вимоги до ПЗ', '', 'Програмне забезпечення', '2019-05-07', 3, 27, 0, 'lecture'),
(12, 'ТЕма3', 'смсмтсми', 'Пробная', '2019-06-24', 1, 14, 0, 'lecture');

-- --------------------------------------------------------

--
-- Структура таблицы `student_statist`
--

CREATE TABLE `student_statist` (
  `id` int(11) NOT NULL,
  `st_id` int(11) NOT NULL,
  `test_id` int(11) NOT NULL,
  `mark` varchar(5) NOT NULL DEFAULT '0',
  `mark_all` varchar(5) NOT NULL DEFAULT '0',
  `date` varchar(10) NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `student_statist`
--

INSERT INTO `student_statist` (`id`, `st_id`, `test_id`, `mark`, `mark_all`, `date`) VALUES
(50, 16, 22, '0', '20', '2019-06-10'),
(51, 16, 22, '2', '20', '2019-06-10'),
(53, 20, 22, '8', '20', '2019-06-22'),
(54, 20, 22, '8', '20', '2019-06-22'),
(55, 20, 22, '9', '20', '2019-06-22'),
(57, 14, 22, '7', '20', '2019-06-22'),
(58, 14, 22, '8', '20', '2019-06-22'),
(59, 14, 22, '8', '20', '2019-06-22'),
(64, 14, 24, '0', '20', '2019-06-23'),
(65, 14, 24, '0', '20', '2019-06-23'),
(66, 14, 24, '3', '20', '2019-06-23'),
(67, 14, 24, '3', '20', '2019-06-23'),
(68, 14, 24, '3', '20', '2019-06-23'),
(69, 14, 32, '2', '5', '2019-06-23'),
(70, 14, 32, '2', '5', '2019-06-23'),
(71, 14, 32, '2', '5', '2019-06-23'),
(72, 14, 32, '3', '5', '2019-06-23'),
(73, 14, 32, '2', '5', '2019-06-23'),
(74, 14, 32, '2', '5', '2019-06-23'),
(75, 14, 32, '2', '5', '2019-06-23'),
(76, 14, 32, '2', '5', '2019-06-23'),
(77, 14, 32, '2', '5', '2019-06-23'),
(78, 14, 32, '2', '5', '2019-06-23'),
(79, 14, 32, '3', '5', '2019-06-23'),
(80, 14, 32, '2', '5', '2019-06-23'),
(81, 14, 32, '2', '5', '2019-06-23'),
(82, 14, 32, '2', '5', '2019-06-23'),
(83, 14, 32, '3', '5', '2019-06-23'),
(84, 14, 32, '2', '5', '2019-06-23'),
(85, 14, 32, '2', '5', '2019-06-23'),
(86, 14, 32, '3', '5', '2019-06-23'),
(87, 14, 32, '2', '5', '2019-06-23'),
(88, 14, 32, '2', '5', '2019-06-23'),
(89, 14, 32, '2', '5', '2019-06-23'),
(90, 14, 32, '3', '5', '2019-06-23'),
(91, 14, 32, '2', '5', '2019-06-23'),
(92, 14, 32, '2', '5', '2019-06-23'),
(93, 14, 32, '2', '5', '2019-06-23'),
(94, 14, 32, '2', '5', '2019-06-23'),
(95, 14, 32, '2', '5', '2019-06-23'),
(96, 14, 32, '0', '5', '2019-06-23'),
(97, 14, 32, '0', '5', '2019-06-23'),
(98, 14, 32, '1', '5', '2019-06-23'),
(99, 14, 32, '1', '5', '2019-06-23'),
(100, 14, 32, '2', '5', '2019-06-23'),
(101, 14, 32, '1', '5', '2019-06-23'),
(102, 14, 32, '1', '5', '2019-06-23'),
(103, 14, 32, '2', '5', '2019-06-23'),
(104, 14, 32, '2', '5', '2019-06-23'),
(105, 14, 32, '3', '5', '2019-06-23'),
(106, 14, 32, '2', '5', '2019-06-23'),
(107, 14, 32, '2', '5', '2019-06-23'),
(108, 14, 32, '2', '5', '2019-06-23'),
(109, 14, 32, '3', '5', '2019-06-23'),
(110, 14, 32, '2', '5', '2019-06-23'),
(111, 14, 32, '2', '5', '2019-06-23'),
(112, 14, 32, '2', '5', '2019-06-23'),
(113, 14, 32, '2', '5', '2019-06-23'),
(114, 14, 32, '3', '5', '2019-06-23'),
(115, 14, 32, '3', '5', '2019-06-23'),
(116, 14, 32, '2', '5', '2019-06-23'),
(117, 14, 32, '2', '5', '2019-06-23'),
(118, 14, 32, '2', '5', '2019-06-23'),
(119, 14, 32, '1', '5', '2019-06-23'),
(120, 14, 32, '0', '5', '2019-06-23'),
(121, 14, 32, '0', '5', '2019-06-23'),
(122, 14, 32, '0', '5', '2019-06-23'),
(123, 14, 32, '0', '5', '2019-06-23'),
(124, 14, 32, '0', '5', '2019-06-23'),
(125, 14, 32, '1', '5', '2019-06-23'),
(126, 14, 32, '0', '5', '2019-06-23'),
(127, 14, 32, '0', '5', '2019-06-23'),
(128, 14, 32, '1', '5', '2019-06-23'),
(129, 14, 32, '3', '5', '2019-06-23'),
(130, 14, 32, '3', '5', '2019-06-23'),
(131, 14, 32, '4', '6', '2019-06-23'),
(132, 14, 32, '3', '5', '2019-06-23'),
(133, 14, 32, '1', '5', '2019-06-23'),
(134, 14, 32, '0', '5', '2019-06-23'),
(135, 14, 32, '1', '5', '2019-06-23'),
(136, 14, 32, '0', '5', '2019-06-23'),
(137, 14, 32, '0', '5', '2019-06-23'),
(138, 14, 32, '0', '5', '2019-06-23'),
(139, 14, 32, '0', '5', '2019-06-23'),
(140, 14, 32, '0', '5', '2019-06-23'),
(141, 14, 32, '0', '5', '2019-06-23'),
(142, 14, 32, '0', '5', '2019-06-23'),
(143, 14, 32, '0', '5', '2019-06-23'),
(144, 14, 32, '0', '5', '2019-06-23'),
(145, 14, 32, '0', '5', '2019-06-23'),
(146, 14, 32, '1', '5', '2019-06-23'),
(147, 14, 32, '0', '5', '2019-06-23'),
(148, 14, 32, '0', '5', '2019-06-23'),
(149, 14, 32, '0', '5', '2019-06-23'),
(150, 14, 32, '1', '5', '2019-06-23'),
(151, 14, 32, '1', '5', '2019-06-23'),
(152, 14, 32, '1', '5', '2019-06-23'),
(153, 14, 32, '2', '5', '2019-06-23'),
(154, 14, 32, '2', '5', '2019-06-23'),
(155, 14, 32, '2', '5', '2019-06-24');

-- --------------------------------------------------------

--
-- Структура таблицы `test`
--

CREATE TABLE `test` (
  `id` int(11) NOT NULL,
  `name` varchar(250) NOT NULL DEFAULT 'Тест',
  `title` varchar(250) NOT NULL DEFAULT '',
  `description` text NOT NULL,
  `tags` text NOT NULL,
  `date` varchar(10) NOT NULL DEFAULT '2019-01-01',
  `teacher_id` int(11) NOT NULL DEFAULT '0',
  `view` int(11) NOT NULL DEFAULT '0',
  `testing` int(11) NOT NULL DEFAULT '0',
  `type` varchar(10) NOT NULL DEFAULT 'test'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `test`
--

INSERT INTO `test` (`id`, `name`, `title`, `description`, `tags`, `date`, `teacher_id`, `view`, `testing`, `type`) VALUES
(22, '', 'Тест 1', 'Контроль знань', 'Тест 1', '2019-06-10', 1, 106, 19, 'test'),
(24, '', 'Тест 2', 'Контроль знань', 'Тест 2', '2019-06-10', 1, 47, 6, 'test'),
(32, '', 'Тест 3', 'Пробний тест', 'Тест 3', '2019-06-22', 1, 149, 87, 'test');

-- --------------------------------------------------------

--
-- Структура таблицы `test_answer`
--

CREATE TABLE `test_answer` (
  `id` int(11) NOT NULL,
  `quest_id` int(11) NOT NULL,
  `value` text NOT NULL,
  `is_true` int(1) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `test_answer`
--

INSERT INTO `test_answer` (`id`, `quest_id`, `value`, `is_true`) VALUES
(7, 3, 'Жёлтый', 1),
(8, 3, 'Синий', 0),
(9, 4, 'Паразит', 1),
(10, 3, 'Синдром', 0),
(55, 10, 'Белый', 1),
(56, 10, 'Жёлтый', 1),
(57, 10, 'Красный', 0),
(58, 10, 'Синий', 0),
(59, 10, 'Оранжевый', 0),
(60, 11, 'Вид животного', 1),
(61, 11, 'Вирус', 0),
(62, 11, 'Бактерия', 0),
(63, 11, 'Паразит', 0),
(64, 12, 'Исскуство', 1),
(65, 12, 'Убийца личной жизни', 1),
(66, 12, 'Наука', 0),
(67, 12, 'Болезнь', 0),
(68, 13, 'Хомо самиенс', 1),
(69, 13, 'Хомо програмистик', 1),
(70, 13, 'Хомо безделиус', 1),
(71, 13, 'Хомо студентиус', 1),
(89, 18, 'Еволюційна', 1),
(90, 18, 'Спіральна', 0),
(91, 18, 'Каскадна', 0),
(92, 18, 'Ітераційна', 0),
(93, 19, 'Завдання, які автоматично  вводять, обробляють і зберігають дані користувачів.', 1),
(94, 20, 'Еволюційна', 1),
(95, 20, 'Спіральна', 0),
(96, 20, 'Каскадна', 0),
(97, 20, 'Ітераційна', 0),
(98, 21, 'Завдання, які автоматично  вводять, обробляють і зберігають дані користувачів.', 1),
(99, 21, 'Завдання, автоматизовані на персональному комп`ютері для полегшення  праці', 0),
(100, 21, 'Набір комп`ютених програм, наявних на персональному комп`ютері', 0),
(101, 21, 'Комплекс взаємопов`язаних програм для вирішення будь-якої проблеми (завдання) масового попиту, підготовлений для реалізації як певний вид промислової продукції', 0),
(102, 22, 'Технології створення процедур і функцій з використанням об`єктно-оріетірованої мови', 1),
(103, 22, 'Технології створення Ole-об`єктів', 0),
(104, 22, 'Завдання, які автоматично  вводять, обробляють та зберігають дані користувачів', 0),
(105, 22, 'Технології, пов`язані з обробкою даних на комп`ютерах', 0),
(106, 23, 'Формальні ', 1),
(107, 23, 'Динамічні методи', 0),
(108, 23, 'Статичні методи', 0),
(109, 23, 'Гібридні методи', 0),
(110, 24, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(111, 24, 'Оцінка вразливості програмного забезпечення до різного роду атак і несанкціонованих дій.', 0),
(112, 24, 'Тестування роботи системи в умовах різного роду навантажень, тобто визначення залежності продуктивності системи від робочого навантаження', 0),
(113, 24, 'Поверхнева перевірка всіх модулів системи на наявність критичних і блокуючих помилок', 0),
(114, 25, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(115, 25, 'Декомпозиція рішення для виділеного спектра завдань домену на підсистеми або ієрархію підсистем', 0),
(116, 25, 'Визначення системи в термінах обчислювальних складових (підсистем) і інтерфейсів між ними, яке відображає правила декомпозиції проблеми на складові', 0),
(117, 25, 'Відповідні варіації складу виділених компонент', 0),
(118, 26, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(119, 26, 'Відношення розширення пов`язує актора з окремим варіантом використання', 0),
(120, 26, 'Відношення розширення пов`язує окремих акторів між собою', 0),
(121, 26, 'Відношення розширення пов`язує між собою варіант використання та бізнес-систему', 0),
(122, 27, 'Визначення функціональних можливостей системи, призначених для користувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(123, 27, 'Визначення інформаційної системи', 0),
(124, 27, 'Визначення вимог до інтерфейсу', 0),
(125, 27, 'Визначення вимог до надійності, безпеки, структури інформаційної системи', 0),
(126, 28, '1 .. *,  (0: 1)', 1),
(127, 28, '(0: 1), 1: n', 0),
(128, 28, '1: n, 1 .. *', 0),
(129, 28, '0..1, 1 .. *', 0),
(130, 29, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(131, 29, 'Перевірка правильності трансформації проекту в програму;', 0),
(132, 29, 'Дії на кожній стадії життєвого циклу з перевірки і підтвердження відповідності стандартам;', 0),
(133, 29, 'Виявлення всіх помилок', 0),
(134, 30, 'Діаграма топології мережі', 1),
(135, 30, 'Діаграма DFD', 0),
(136, 30, 'Діаграма структури бази даних', 0),
(137, 30, 'Діаграма кооперації', 0),
(138, 31, 'Еліпс', 1),
(139, 31, 'Ромб', 0),
(140, 31, 'Квадрат', 0),
(141, 31, 'Прямокутник', 0),
(142, 32, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(143, 32, 'Одночасно кілька сторожових умов мають значення \"істина\"', 0),
(144, 32, 'Об`єкт приймає одночасно декілька повідомлень - может быть но не факт', 0),
(145, 32, 'Об`єкт має стереотип \"conflict\"', 0),
(146, 33, 'Каскадна або поетапна розробка', 1),
(147, 33, 'Ітераційна або інкрементна (еволюційна) модель', 0),
(148, 33, 'Гнучка методологія Agile – розробки', 0),
(149, 33, 'Спіральна методика', 0),
(150, 34, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(151, 34, 'Забезпечення дружнього інтерфейсу для роботи  кінцевого користувача, наявність контекстно-залежної  підказки для навчальної системи в складі про-грамного засобу, забезпеченність  документацією для освоєння і використання закладених в програмному засобі функціональних можливостей', 0),
(152, 34, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, відсутність монотонності при виконанні програми', 0),
(153, 34, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, ав-томатичного виправлення зроблених користувачем помилок', 0),
(154, 35, 'Об’єктно-орієнтоване  програмування', 1),
(155, 35, 'Структурне програмування', 0),
(156, 35, 'Алгебраїчне програмування', 0),
(157, 35, 'Подійно-орієнтоване  програмування', 0),
(158, 36, 'Підготовча робота, аналіз вимог до системи, проектування архітектури системи, аналіз вимог до програмного забезпечення, проектування архітектури ПЗ, детальне проектування ПЗ, кодування і тестування ПЗ, установка ПЗ, приймання ПЗ', 1),
(159, 36, 'Оформлення договору з замовником, оформлення проектної документації, створення програмного забезпечення, передача замовнику', 0),
(160, 36, 'Ознайомлення з предметною областю, створення документа «Технічне зав-дання», аналіз наявних програмних пакетів,  розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(161, 36, 'Ознайомлення з предметною областю, аналіз предметної області, формуван-ня вимог до ПЗ, розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(162, 37, 'Атрибут функціональності, який вказує на можливість уникнути  несанкціонованого доступу', 1),
(163, 37, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(164, 37, 'Атрибут  зручності, який визначає зусилля, необхідні для розпізнавання логічних концепцій та умови їх застосування', 0),
(165, 37, 'Атрибут достовірності, який вказує на якість та точність  реалізаці', 0),
(166, 38, 'Інструментарій технології програмування', 1),
(167, 38, 'Системне програмне забезпечення', 0),
(168, 38, 'Пакет прикладних програм', 0),
(169, 38, 'Операційна система', 0),
(170, 39, 'Методологія проектування інформаційних систем', 1),
(171, 39, 'Методологія проектування програмних засобів, а також набір інструментальних засобів, які дозволяють в наглядній формі моделювати предметну область, аналізувати цю модель на всіх етапах розробки і супроводу ', 0),
(172, 39, 'Методологія проектування предметної області задачі', 0),
(173, 39, 'Інструментарій технології програмування', 0),
(174, 40, 'Відображення  динаміки  змін стану кожного  класу об’єктів', 1),
(175, 40, 'Будь-який продукт діяльності спеціалістів з розробки програмного забезпе-чення', 0),
(176, 40, 'Результат помилок  розробника  у  вхідних або  проектних специфікаціях', 0),
(177, 40, 'Графічне уявлення елементів моделювання  системи', 0),
(178, 41, 'Розбивка рішення задачі', 1),
(179, 41, 'Розбивка системи на підсистеми', 0),
(180, 41, 'Розбивка програми на частини', 0),
(181, 41, 'Розбивка системи на головні функції та допоміжні функції', 0),
(182, 42, 'Термін працездатності програмного забезпечення', 1),
(183, 42, 'Термін створення програмного забезпечення', 0),
(184, 42, 'Термін експлуатації програмного продукту', 0),
(185, 42, 'Неперервний процес, який починається з моменту прийняття рішення про необхідность створення програмного забезпечення і закінчується в момент виводу  його з експлуатації', 0),
(186, 43, 'Еволюційна', 1),
(187, 43, 'Спіральна', 0),
(188, 43, 'Каскадна', 0),
(189, 43, 'Ітераційна', 0),
(190, 44, 'Завдання, які автоматично  вводять, обробляють і зберігають дані користувачів.', 1),
(191, 44, 'Завдання, автоматизовані на персональному комп`ютері для полегшення  праці', 0),
(192, 44, 'Набір комп`ютених програм, наявних на персональному комп`ютері', 0),
(193, 44, 'Комплекс взаємопов`язаних програм для вирішення будь-якої проблеми (завдання) масового попиту, підготовлений для реалізації як певний вид промислової продукції', 0),
(194, 45, 'Технології створення процедур і функцій з використанням об`єктно-оріетірованої мови', 1),
(195, 45, 'Технології створення Ole-об`єктів', 0),
(196, 45, 'Завдання, які автоматично  вводять, обробляють та зберігають дані користувачів', 0),
(197, 45, 'Технології, пов`язані з обробкою даних на комп`ютерах', 0),
(198, 46, 'З використанням інструментарію технологій програмування', 1),
(199, 46, 'Інструментального програмного забезпечення', 0),
(200, 46, 'Новітніх технічних засобів', 0),
(201, 46, 'Промислової технології  виконання проектних робіт із застосуванням сучас-них інструментальних засобів програмування', 0),
(202, 47, 'Інтеграції з іншими додатками', 1),
(203, 47, 'Інтеграції з іншими інформаційними системами', 0),
(204, 47, 'Передачі даних з однієї БД в іншу БД', 0),
(205, 47, 'Роботі в іншій операційній системі', 0),
(206, 48, 'ISO / IES 9294. Основні принципи управління розробкою документації на програмне забезпечення', 1),
(207, 48, 'Міжнародний стандарт ISO / IES 12207 (ISO - International of Organization of Standardization - Міжнародна організація по стандартизації, IES - Elektrotechnical Commission - Міжнародна Комісія з електротехніки)', 0),
(208, 48, 'ISO / IES DTR 15504 (SPICE) - Оцінка і поліпшення процесів розробки про-грамного забезпечення', 0),
(209, 48, 'Серія ISO 9000 (9000-1.9000-2.10013.9004-5.) Це стандарти в галузі управління якістю та забезпечення якості.', 0),
(210, 49, 'актуальну', 1),
(211, 49, 'гнучку', 0),
(212, 49, 'обєктно - орієнтовну', 0),
(213, 49, 'швидку', 0),
(214, 50, 'Процес розробки, процес продажу, процес супроводу ', 1),
(215, 50, 'Процес придбання, процес передачі, процес знищення', 0),
(216, 50, 'Процес придбання, процес поставки, процес розробки, процес експлуатації, процес супроводу', 0),
(217, 50, 'Процес проектування, процес передачі, процес експлуатації', 0),
(218, 51, 'Дії, які відбуваються з об`єктом', 1),
(219, 51, 'Дії, які дозволяють управляти об`єктом', 0),
(220, 51, 'Дії, які можна зробити з об`єктом', 0),
(221, 51, 'Функціональні та інформаційні можливості об`єкту', 0),
(222, 52, 'Успадкування', 1),
(223, 52, 'Інкапсуляція', 0),
(224, 52, 'Поліморфізм', 0),
(225, 52, 'Множинне успадкування', 0),
(226, 53, 'Відображення частин програм, які будуть модифікуватися.', 1),
(227, 53, 'Відображення функцій системи та її обмежень в моделі проблеми', 0),
(228, 53, 'Показник супроводу, який визначає необхідні зусилля для діагностики випадів відмов;', 0),
(229, 53, 'Композиція рішення для виділеного спектра завдань домену на підсистеми.', 0),
(230, 54, 'Атрибут функціональності, який вказує на можливість запобігати несанкціонованому доступу', 1),
(231, 54, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(232, 54, 'Атрибут зручності, що визначає зусилля, необхідні для розпізнавання логічних концепцій та умов їх застосування ', 0),
(233, 54, 'Атрибут  перевірки  правильності трансформації проекту в код реалізації', 0),
(234, 55, 'Архітектурна обробка програми', 1),
(235, 55, 'Вдосконалення програми', 0),
(236, 55, 'Вибір мови програмування ', 0),
(237, 55, 'Вибір методології розробки програмного забезпечення', 0),
(238, 56, '{complete}', 1),
(239, 56, '{disjoint}', 0),
(240, 56, '{incomplete}', 0),
(241, 56, '{overlapping}', 0),
(242, 57, 'Вимоги, супровід, тестування', 1),
(243, 57, 'Вимоги, проектування, реалізація', 0),
(244, 57, 'Проектування, супровід, тестування', 0),
(245, 57, 'Супровід, реалізація, тестування ', 0),
(246, 58, 'Програма повинна функціонувати в будь-яких операційних системах', 1),
(247, 58, 'Програма повинна бути спроектованою згідно з технічним завданням, ефек-тивною за швидкодією та використанням пам`яті,   доступною, модернізованою,  надійною в процесі розрахунку', 0),
(248, 58, 'Програма повинна виконувати всі функції, закладені в технічному завданні', 0),
(249, 58, 'Програма повинна правильно обчислювати всі операції завдання', 0),
(250, 59, 'Незалежністю від операційного середовища, мережевій технології обробки даних, специфіки предметної області', 1),
(251, 59, 'З позицій  його призначення - вимог користувача,  а також  з точки зору вит-рат обчислювальних ресурсів, необхідних для його експлуатації', 0),
(252, 59, 'З позицій швидкості виконання завдання та часу виконання', 0),
(253, 59, 'З позицій  зменшення часу виконання процесу, звільнення трудових ресурсів', 0),
(254, 60, 'Дії, які можна зробити з об`єктом', 1),
(255, 60, ' Події, які дозволяють управляти об`єктом', 0),
(256, 60, 'Дії, які відбуваються з об`єктом', 0),
(257, 60, 'Функціональні та інформаційні можливості об`єкту', 0),
(258, 61, 'Незалежністю від технічного комплексу системи обробки даних', 1),
(259, 61, 'Незалежністю від операційного середовища, мережевої  технології  обробки даних, специфіки предметної області', 0),
(260, 61, 'Безперебійністю і стійкістю в роботі програм, точністю виконання запропо-нованих функцій обробки, можливістю діагностики помилок, що виникають в процесі роботи програм ', 0),
(261, 61, 'Коректним виконанням функцій завдання', 0),
(262, 62, 'Функціональні та інформаційні можливості об`єкта', 1),
(263, 62, 'Дії, які можна зробити з об`єктом', 0),
(264, 62, 'Події, які дозволяють управляти об`єктом', 0),
(265, 62, 'Показники, що характеризують об`єкт', 0),
(266, 63, 'Формальні ', 1),
(267, 63, 'Динамічні методи', 0),
(268, 63, 'Статичні методи', 0),
(269, 63, 'Гібридні методи', 0),
(270, 64, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(271, 64, 'Оцінка вразливості програмного забезпечення до різного роду атак і несанкціонованих дій.', 0),
(272, 64, 'Тестування роботи системи в умовах різного роду навантажень, тобто визначення залежності продуктивності системи від робочого навантаження', 0),
(273, 64, 'Поверхнева перевірка всіх модулів системи на наявність критичних і блокуючих помилок', 0),
(274, 65, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(275, 65, 'Декомпозиція рішення для виділеного спектра завдань домену на підсистеми або ієрархію підсистем', 0),
(276, 65, 'Визначення системи в термінах обчислювальних складових (підсистем) і інтерфейсів між ними, яке відображає правила декомпозиції проблеми на складові', 0),
(277, 65, 'Відповідні варіації складу виділених компонент', 0),
(278, 66, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(279, 66, 'Відношення розширення пов`язує актора з окремим варіантом використання', 0),
(280, 66, 'Відношення розширення пов`язує окремих акторів між собою', 0),
(281, 66, 'Відношення розширення пов`язує між собою варіант використання та бізнес-систему', 0),
(282, 67, 'Визначення функціональних можливостей системи, призначених для користувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(283, 67, 'Визначення інформаційної системи', 0),
(284, 67, 'Визначення вимог до інтерфейсу', 0),
(285, 67, 'Визначення вимог до надійності, безпеки, структури інформаційної системи', 0),
(286, 68, '1 .. *,  (0: 1)', 1),
(287, 68, '(0: 1), 1: n', 0),
(288, 68, '1: n, 1 .. *', 0),
(289, 68, '0..1, 1 .. *', 0),
(290, 69, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(291, 69, 'Перевірка правильності трансформації проекту в програму;', 0),
(292, 69, 'Дії на кожній стадії життєвого циклу з перевірки і підтвердження відповідності стандартам;', 0),
(293, 69, 'Виявлення всіх помилок', 0),
(294, 70, 'Діаграма топології мережі', 1),
(295, 70, 'Діаграма DFD', 0),
(296, 70, 'Діаграма структури бази даних', 0),
(297, 70, 'Діаграма кооперації', 0),
(298, 71, 'Еліпс', 1),
(299, 71, 'Ромб', 0),
(300, 71, 'Квадрат', 0),
(301, 71, 'Прямокутник', 0),
(302, 72, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(303, 72, 'Одночасно кілька сторожових умов мають значення \"істина\"', 0),
(304, 72, 'Об`єкт приймає одночасно декілька повідомлень - может быть но не факт', 0),
(305, 72, 'Об`єкт має стереотип \"conflict\"', 0),
(306, 73, 'Каскадна або поетапна розробка', 1),
(307, 73, 'Ітераційна або інкрементна (еволюційна) модель', 0),
(308, 73, 'Гнучка методологія Agile – розробки', 0),
(309, 73, 'Спіральна методика', 0),
(310, 74, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(311, 74, 'Забезпечення дружнього інтерфейсу для роботи  кінцевого користувача, наявність контекстно-залежної  підказки для навчальної системи в складі про-грамного засобу, забезпеченність  документацією для освоєння і використання закладених в програмному засобі функціональних можливостей', 0),
(312, 74, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, відсутність монотонності при виконанні програми', 0),
(313, 74, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, ав-томатичного виправлення зроблених користувачем помилок', 0),
(314, 75, 'Об’єктно-орієнтоване  програмування', 1),
(315, 75, 'Структурне програмування', 0),
(316, 75, 'Алгебраїчне програмування', 0),
(317, 75, 'Подійно-орієнтоване  програмування', 0),
(318, 76, 'Підготовча робота, аналіз вимог до системи, проектування архітектури системи, аналіз вимог до програмного забезпечення, проектування архітектури ПЗ, детальне проектування ПЗ, кодування і тестування ПЗ, установка ПЗ, приймання ПЗ', 1),
(319, 76, 'Оформлення договору з замовником, оформлення проектної документації, створення програмного забезпечення, передача замовнику', 0),
(320, 76, 'Ознайомлення з предметною областю, створення документа «Технічне зав-дання», аналіз наявних програмних пакетів,  розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(321, 76, 'Ознайомлення з предметною областю, аналіз предметної області, формуван-ня вимог до ПЗ, розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(322, 77, 'Атрибут функціональності, який вказує на можливість уникнути  несанкціонованого доступу', 1),
(323, 77, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(324, 77, 'Атрибут  зручності, який визначає зусилля, необхідні для розпізнавання логічних концепцій та умови їх застосування', 0),
(325, 77, 'Атрибут достовірності, який вказує на якість та точність  реалізаці', 0),
(326, 78, 'Інструментарій технології програмування', 1),
(327, 78, 'Системне програмне забезпечення', 0),
(328, 78, 'Пакет прикладних програм', 0),
(329, 78, 'Операційна система', 0),
(330, 79, 'Методологія проектування інформаційних систем', 1),
(331, 79, 'Методологія проектування програмних засобів, а також набір інструментальних засобів, які дозволяють в наглядній формі моделювати предметну область, аналізувати цю модель на всіх етапах розробки і супроводу ', 0),
(332, 79, 'Методологія проектування предметної області задачі', 0),
(333, 79, 'Інструментарій технології програмування', 0),
(334, 80, 'Відображення  динаміки  змін стану кожного  класу об’єктів', 1),
(335, 80, 'Будь-який продукт діяльності спеціалістів з розробки програмного забезпе-чення', 0),
(336, 80, 'Результат помилок  розробника  у  вхідних або  проектних специфікаціях', 0),
(337, 80, 'Графічне уявлення елементів моделювання  системи', 0),
(338, 81, 'Розбивка рішення задачі', 1),
(339, 81, 'Розбивка системи на підсистеми', 0),
(340, 81, 'Розбивка програми на частини', 0),
(341, 81, 'Розбивка системи на головні функції та допоміжні функції', 0),
(342, 82, 'Термін працездатності програмного забезпечення', 1),
(343, 82, 'Термін створення програмного забезпечення', 0),
(344, 82, 'Термін експлуатації програмного продукту', 0),
(345, 82, 'Неперервний процес, який починається з моменту прийняття рішення про необхідность створення програмного забезпечення і закінчується в момент виводу  його з експлуатації', 0),
(346, 83, 'Формальні ', 1),
(347, 83, 'Динамічні методи', 0),
(348, 83, 'Статичні методи', 0),
(349, 83, 'Гібридні методи', 0),
(350, 84, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(351, 84, 'Оцінка вразливості програмного забезпечення до різного роду атак і несанкціонованих дій.', 0),
(352, 84, 'Тестування роботи системи в умовах різного роду навантажень, тобто визначення залежності продуктивності системи від робочого навантаження', 0),
(353, 84, 'Поверхнева перевірка всіх модулів системи на наявність критичних і блокуючих помилок', 0),
(354, 85, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(355, 85, 'Декомпозиція рішення для виділеного спектра завдань домену на підсистеми або ієрархію підсистем', 0),
(356, 85, 'Визначення системи в термінах обчислювальних складових (підсистем) і інтерфейсів між ними, яке відображає правила декомпозиції проблеми на складові', 0),
(357, 85, 'Відповідні варіації складу виділених компонент', 0),
(358, 86, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(359, 86, 'Відношення розширення пов`язує актора з окремим варіантом використання', 0),
(360, 86, 'Відношення розширення пов`язує окремих акторів між собою', 0),
(361, 86, 'Відношення розширення пов`язує між собою варіант використання та бізнес-систему', 0),
(362, 87, 'Визначення функціональних можливостей системи, призначених для користувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(363, 87, 'Визначення інформаційної системи', 0),
(364, 87, 'Визначення вимог до інтерфейсу', 0),
(365, 87, 'Визначення вимог до надійності, безпеки, структури інформаційної системи', 0),
(366, 88, '1 .. *,  (0: 1)', 1),
(367, 88, '(0: 1), 1: n', 0),
(368, 88, '1: n, 1 .. *', 0),
(369, 88, '0..1, 1 .. *', 0),
(370, 89, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(371, 89, 'Перевірка правильності трансформації проекту в програму;', 0),
(372, 89, 'Дії на кожній стадії життєвого циклу з перевірки і підтвердження відповідності стандартам;', 0),
(373, 89, 'Виявлення всіх помилок', 0),
(374, 90, 'Діаграма топології мережі', 1),
(375, 90, 'Діаграма DFD', 0),
(376, 90, 'Діаграма структури бази даних', 0),
(377, 90, 'Діаграма кооперації', 0),
(378, 91, 'Еліпс', 1),
(379, 91, 'Ромб', 0),
(380, 91, 'Квадрат', 0),
(381, 91, 'Прямокутник', 0),
(382, 92, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(383, 92, 'Одночасно кілька сторожових умов мають значення \"істина\"', 0),
(384, 92, 'Об`єкт приймає одночасно декілька повідомлень - может быть но не факт', 0),
(385, 92, 'Об`єкт має стереотип \"conflict\"', 0),
(386, 93, 'Каскадна або поетапна розробка', 1),
(387, 93, 'Ітераційна або інкрементна (еволюційна) модель', 0),
(388, 93, 'Гнучка методологія Agile – розробки', 0),
(389, 93, 'Спіральна методика', 0),
(390, 94, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(391, 94, 'Забезпечення дружнього інтерфейсу для роботи  кінцевого користувача, наявність контекстно-залежної  підказки для навчальної системи в складі про-грамного засобу, забезпеченність  документацією для освоєння і використання закладених в програмному засобі функціональних можливостей', 0),
(392, 94, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, відсутність монотонності при виконанні програми', 0),
(393, 94, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, ав-томатичного виправлення зроблених користувачем помилок', 0),
(394, 95, 'Об’єктно-орієнтоване  програмування', 1),
(395, 95, 'Структурне програмування', 0),
(396, 95, 'Алгебраїчне програмування', 0),
(397, 95, 'Подійно-орієнтоване  програмування', 0),
(398, 96, 'Підготовча робота, аналіз вимог до системи, проектування архітектури системи, аналіз вимог до програмного забезпечення, проектування архітектури ПЗ, детальне проектування ПЗ, кодування і тестування ПЗ, установка ПЗ, приймання ПЗ', 1),
(399, 96, 'Оформлення договору з замовником, оформлення проектної документації, створення програмного забезпечення, передача замовнику', 0),
(400, 96, 'Ознайомлення з предметною областю, створення документа «Технічне зав-дання», аналіз наявних програмних пакетів,  розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(401, 96, 'Ознайомлення з предметною областю, аналіз предметної області, формуван-ня вимог до ПЗ, розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(402, 97, 'Атрибут функціональності, який вказує на можливість уникнути  несанкціонованого доступу', 1),
(403, 97, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(404, 97, 'Атрибут  зручності, який визначає зусилля, необхідні для розпізнавання логічних концепцій та умови їх застосування', 0),
(405, 97, 'Атрибут достовірності, який вказує на якість та точність  реалізаці', 0),
(406, 98, 'Інструментарій технології програмування', 1),
(407, 98, 'Системне програмне забезпечення', 0),
(408, 98, 'Пакет прикладних програм', 0),
(409, 98, 'Операційна система', 0),
(410, 99, 'Методологія проектування інформаційних систем', 1),
(411, 99, 'Методологія проектування програмних засобів, а також набір інструментальних засобів, які дозволяють в наглядній формі моделювати предметну область, аналізувати цю модель на всіх етапах розробки і супроводу ', 0),
(412, 99, 'Методологія проектування предметної області задачі', 0),
(413, 99, 'Інструментарій технології програмування', 0),
(414, 100, 'Відображення  динаміки  змін стану кожного  класу об’єктів', 1),
(415, 100, 'Будь-який продукт діяльності спеціалістів з розробки програмного забезпе-чення', 0),
(416, 100, 'Результат помилок  розробника  у  вхідних або  проектних специфікаціях', 0),
(417, 100, 'Графічне уявлення елементів моделювання  системи', 0),
(418, 101, 'Розбивка рішення задачі', 1),
(419, 101, 'Розбивка системи на підсистеми', 0),
(420, 101, 'Розбивка програми на частини', 0),
(421, 101, 'Розбивка системи на головні функції та допоміжні функції', 0),
(422, 102, 'Термін працездатності програмного забезпечення', 1),
(423, 102, 'Термін створення програмного забезпечення', 0),
(424, 102, 'Термін експлуатації програмного продукту', 0),
(425, 102, 'Неперервний процес, який починається з моменту прийняття рішення про необхідность створення програмного забезпечення і закінчується в момент виводу  його з експлуатації', 0),
(426, 103, 'Еволюційна', 1),
(427, 103, 'Спіральна', 0),
(428, 103, 'Каскадна', 0),
(429, 103, 'Ітераційна', 0),
(430, 104, 'Завдання, які автоматично  вводять, обробляють і зберігають дані користувачів.', 1),
(431, 104, 'Завдання, автоматизовані на персональному комп`ютері для полегшення  праці', 0),
(432, 104, 'Набір комп`ютених програм, наявних на персональному комп`ютері', 0),
(433, 104, 'Комплекс взаємопов`язаних програм для вирішення будь-якої проблеми (завдання) масового попиту, підготовлений для реалізації як певний вид промислової продукції', 0),
(434, 105, 'Технології створення процедур і функцій з використанням об`єктно-оріетірованої мови', 1),
(435, 105, 'Технології створення Ole-об`єктів', 0),
(436, 105, 'Завдання, які автоматично  вводять, обробляють та зберігають дані користувачів', 0),
(437, 105, 'Технології, пов`язані з обробкою даних на комп`ютерах', 0),
(438, 106, 'З використанням інструментарію технологій програмування', 1),
(439, 106, 'Інструментального програмного забезпечення', 0),
(440, 106, 'Новітніх технічних засобів', 0),
(441, 106, 'Промислової технології  виконання проектних робіт із застосуванням сучас-них інструментальних засобів програмування', 0),
(442, 107, 'Інтеграції з іншими додатками', 1),
(443, 107, 'Інтеграції з іншими інформаційними системами', 0),
(444, 107, 'Передачі даних з однієї БД в іншу БД', 0),
(445, 107, 'Роботі в іншій операційній системі', 0),
(446, 108, 'ISO / IES 9294. Основні принципи управління розробкою документації на програмне забезпечення', 1),
(447, 108, 'Міжнародний стандарт ISO / IES 12207 (ISO - International of Organization of Standardization - Міжнародна організація по стандартизації, IES - Elektrotechnical Commission - Міжнародна Комісія з електротехніки)', 0),
(448, 108, 'ISO / IES DTR 15504 (SPICE) - Оцінка і поліпшення процесів розробки про-грамного забезпечення', 0),
(449, 108, 'Серія ISO 9000 (9000-1.9000-2.10013.9004-5.) Це стандарти в галузі управління якістю та забезпечення якості.', 0),
(450, 109, 'актуальну', 1),
(451, 109, 'гнучку', 0),
(452, 109, 'обєктно - орієнтовну', 0),
(453, 109, 'швидку', 0),
(454, 110, 'Процес розробки, процес продажу, процес супроводу ', 1),
(455, 110, 'Процес придбання, процес передачі, процес знищення', 0),
(456, 110, 'Процес придбання, процес поставки, процес розробки, процес експлуатації, процес супроводу', 0),
(457, 110, 'Процес проектування, процес передачі, процес експлуатації', 0),
(458, 111, 'Дії, які відбуваються з об`єктом', 1),
(459, 111, 'Дії, які дозволяють управляти об`єктом', 0),
(460, 111, 'Дії, які можна зробити з об`єктом', 0),
(461, 111, 'Функціональні та інформаційні можливості об`єкту', 0),
(462, 112, 'Успадкування', 1),
(463, 112, 'Інкапсуляція', 0),
(464, 112, 'Поліморфізм', 0),
(465, 112, 'Множинне успадкування', 0),
(466, 113, 'Відображення частин програм, які будуть модифікуватися.', 1),
(467, 113, 'Відображення функцій системи та її обмежень в моделі проблеми', 0),
(468, 113, 'Показник супроводу, який визначає необхідні зусилля для діагностики випадів відмов;', 0),
(469, 113, 'Композиція рішення для виділеного спектра завдань домену на підсистеми.', 0),
(470, 114, 'Атрибут функціональності, який вказує на можливість запобігати несанкціонованому доступу', 1),
(471, 114, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(472, 114, 'Атрибут зручності, що визначає зусилля, необхідні для розпізнавання логічних концепцій та умов їх застосування ', 0),
(473, 114, 'Атрибут  перевірки  правильності трансформації проекту в код реалізації', 0),
(474, 115, 'Архітектурна обробка програми', 1),
(475, 115, 'Вдосконалення програми', 0),
(476, 115, 'Вибір мови програмування ', 0),
(477, 115, 'Вибір методології розробки програмного забезпечення', 0),
(478, 116, '{complete}', 1),
(479, 116, '{disjoint}', 0),
(480, 116, '{incomplete}', 0),
(481, 116, '{overlapping}', 0),
(482, 117, 'Вимоги, супровід, тестування', 1),
(483, 117, 'Вимоги, проектування, реалізація', 0),
(484, 117, 'Проектування, супровід, тестування', 0),
(485, 117, 'Супровід, реалізація, тестування ', 0),
(486, 118, 'Програма повинна функціонувати в будь-яких операційних системах', 1),
(487, 118, 'Програма повинна бути спроектованою згідно з технічним завданням, ефек-тивною за швидкодією та використанням пам`яті,   доступною, модернізованою,  надійною в процесі розрахунку', 0),
(488, 118, 'Програма повинна виконувати всі функції, закладені в технічному завданні', 0),
(489, 118, 'Програма повинна правильно обчислювати всі операції завдання', 0),
(490, 119, 'Незалежністю від операційного середовища, мережевій технології обробки даних, специфіки предметної області', 1),
(491, 119, 'З позицій  його призначення - вимог користувача,  а також  з точки зору вит-рат обчислювальних ресурсів, необхідних для його експлуатації', 0),
(492, 119, 'З позицій швидкості виконання завдання та часу виконання', 0),
(493, 119, 'З позицій  зменшення часу виконання процесу, звільнення трудових ресурсів', 0),
(494, 120, 'Дії, які можна зробити з об`єктом', 1),
(495, 120, ' Події, які дозволяють управляти об`єктом', 0),
(496, 120, 'Дії, які відбуваються з об`єктом', 0),
(497, 120, 'Функціональні та інформаційні можливості об`єкту', 0),
(498, 121, 'Незалежністю від технічного комплексу системи обробки даних', 1),
(499, 121, 'Незалежністю від операційного середовища, мережевої  технології  обробки даних, специфіки предметної області', 0),
(500, 121, 'Безперебійністю і стійкістю в роботі програм, точністю виконання запропо-нованих функцій обробки, можливістю діагностики помилок, що виникають в процесі роботи програм ', 0),
(501, 121, 'Коректним виконанням функцій завдання', 0),
(502, 122, 'Функціональні та інформаційні можливості об`єкта', 1),
(503, 122, 'Дії, які можна зробити з об`єктом', 0),
(504, 122, 'Події, які дозволяють управляти об`єктом', 0),
(505, 122, 'Показники, що характеризують об`єкт', 0),
(506, 123, 'Формальні ', 1),
(507, 123, 'Динамічні методи', 0),
(508, 123, 'Статичні методи', 0),
(509, 123, 'Гібридні методи', 0),
(510, 124, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(511, 124, 'Оцінка вразливості програмного забезпечення до різного роду атак і несанкціонованих дій.', 0),
(512, 124, 'Тестування роботи системи в умовах різного роду навантажень, тобто визначення залежності продуктивності системи від робочого навантаження', 0),
(513, 124, 'Поверхнева перевірка всіх модулів системи на наявність критичних і блокуючих помилок', 0),
(514, 125, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(515, 125, 'Декомпозиція рішення для виділеного спектра завдань домену на підсистеми або ієрархію підсистем', 0),
(516, 125, 'Визначення системи в термінах обчислювальних складових (підсистем) і інтерфейсів між ними, яке відображає правила декомпозиції проблеми на складові', 0),
(517, 125, 'Відповідні варіації складу виділених компонент', 0),
(518, 126, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(519, 126, 'Відношення розширення пов`язує актора з окремим варіантом використання', 0),
(520, 126, 'Відношення розширення пов`язує окремих акторів між собою', 0),
(521, 126, 'Відношення розширення пов`язує між собою варіант використання та бізнес-систему', 0),
(522, 127, 'Визначення функціональних можливостей системи, призначених для користувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(523, 127, 'Визначення інформаційної системи', 0),
(524, 127, 'Визначення вимог до інтерфейсу', 0),
(525, 127, 'Визначення вимог до надійності, безпеки, структури інформаційної системи', 0),
(526, 128, '1 .. *,  (0: 1)', 1),
(527, 128, '(0: 1), 1: n', 0),
(528, 128, '1: n, 1 .. *', 0),
(529, 128, '0..1, 1 .. *', 0),
(530, 129, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(531, 129, 'Перевірка правильності трансформації проекту в програму;', 0),
(532, 129, 'Дії на кожній стадії життєвого циклу з перевірки і підтвердження відповідності стандартам;', 0),
(533, 129, 'Виявлення всіх помилок', 0),
(534, 130, 'Діаграма топології мережі', 1),
(535, 130, 'Діаграма DFD', 0),
(536, 130, 'Діаграма структури бази даних', 0),
(537, 130, 'Діаграма кооперації', 0),
(538, 131, 'Еліпс', 1),
(539, 131, 'Ромб', 0),
(540, 131, 'Квадрат', 0),
(541, 131, 'Прямокутник', 0),
(542, 132, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(543, 132, 'Одночасно кілька сторожових умов мають значення \"істина\"', 0),
(544, 132, 'Об`єкт приймає одночасно декілька повідомлень - может быть но не факт', 0),
(545, 132, 'Об`єкт має стереотип \"conflict\"', 0),
(546, 133, 'Каскадна або поетапна розробка', 1),
(547, 133, 'Ітераційна або інкрементна (еволюційна) модель', 0),
(548, 133, 'Гнучка методологія Agile – розробки', 0),
(549, 133, 'Спіральна методика', 0),
(550, 134, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(551, 134, 'Забезпечення дружнього інтерфейсу для роботи  кінцевого користувача, наявність контекстно-залежної  підказки для навчальної системи в складі про-грамного засобу, забезпеченність  документацією для освоєння і використання закладених в програмному засобі функціональних можливостей', 0),
(552, 134, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, відсутність монотонності при виконанні програми', 0),
(553, 134, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, ав-томатичного виправлення зроблених користувачем помилок', 0),
(554, 135, 'Об’єктно-орієнтоване  програмування', 1),
(555, 135, 'Структурне програмування', 0),
(556, 135, 'Алгебраїчне програмування', 0),
(557, 135, 'Подійно-орієнтоване  програмування', 0),
(558, 136, 'Підготовча робота, аналіз вимог до системи, проектування архітектури системи, аналіз вимог до програмного забезпечення, проектування архітектури ПЗ, детальне проектування ПЗ, кодування і тестування ПЗ, установка ПЗ, приймання ПЗ', 1),
(559, 136, 'Оформлення договору з замовником, оформлення проектної документації, створення програмного забезпечення, передача замовнику', 0),
(560, 136, 'Ознайомлення з предметною областю, створення документа «Технічне зав-дання», аналіз наявних програмних пакетів,  розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(561, 136, 'Ознайомлення з предметною областю, аналіз предметної області, формуван-ня вимог до ПЗ, розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(562, 137, 'Атрибут функціональності, який вказує на можливість уникнути  несанкціонованого доступу', 1),
(563, 137, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(564, 137, 'Атрибут  зручності, який визначає зусилля, необхідні для розпізнавання логічних концепцій та умови їх застосування', 0),
(565, 137, 'Атрибут достовірності, який вказує на якість та точність  реалізаці', 0),
(566, 138, 'Інструментарій технології програмування', 1),
(567, 138, 'Системне програмне забезпечення', 0),
(568, 138, 'Пакет прикладних програм', 0),
(569, 138, 'Операційна система', 0),
(570, 139, 'Методологія проектування інформаційних систем', 1),
(571, 139, 'Методологія проектування програмних засобів, а також набір інструментальних засобів, які дозволяють в наглядній формі моделювати предметну область, аналізувати цю модель на всіх етапах розробки і супроводу ', 0),
(572, 139, 'Методологія проектування предметної області задачі', 0),
(573, 139, 'Інструментарій технології програмування', 0),
(574, 140, 'Відображення  динаміки  змін стану кожного  класу об’єктів', 1),
(575, 140, 'Будь-який продукт діяльності спеціалістів з розробки програмного забезпе-чення', 0),
(576, 140, 'Результат помилок  розробника  у  вхідних або  проектних специфікаціях', 0),
(577, 140, 'Графічне уявлення елементів моделювання  системи', 0),
(578, 141, 'Розбивка рішення задачі', 1),
(579, 141, 'Розбивка системи на підсистеми', 0),
(580, 141, 'Розбивка програми на частини', 0),
(581, 141, 'Розбивка системи на головні функції та допоміжні функції', 0),
(582, 142, 'Термін працездатності програмного забезпечення', 1),
(583, 142, 'Термін створення програмного забезпечення', 0),
(584, 142, 'Термін експлуатації програмного продукту', 0),
(585, 142, 'Неперервний процес, який починається з моменту прийняття рішення про необхідность створення програмного забезпечення і закінчується в момент виводу  його з експлуатації', 0),
(586, 143, 'Формальні ', 1),
(587, 143, 'Динамічні методи', 0),
(588, 143, 'Статичні методи', 0),
(589, 143, 'Гібридні методи', 0),
(590, 144, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(591, 145, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(592, 146, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(593, 147, 'Визначення функціональних можливостей системи, призначених для кори-стувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(594, 148, '1 .. *,  (0: 1)', 1),
(595, 149, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(596, 150, 'Діаграма топології мережі', 1),
(597, 151, 'Еліпс', 1),
(598, 152, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(599, 153, 'Каскадна або поетапна розробка', 1),
(600, 154, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(601, 163, 'Легкий', 1),
(602, 163, 'Сложный', 0),
(603, 163, 'Нормальный', 0),
(604, 164, 'Крутой', 1),
(605, 164, 'Классный ', 1),
(606, 164, 'Топ', 1),
(607, 164, 'Фигня', 0),
(608, 165, 'Красавчик', 1),
(609, 165, 'Топ', 1),
(610, 165, '-', 0),
(611, 166, 'Правильно', 1),
(612, 166, 'Не правильно ', 0),
(613, 166, 'Не правильно', 0),
(614, 166, 'Не правильно', 0),
(615, 167, 'Правильно', 1),
(616, 167, 'Правильно ', 1),
(617, 167, 'Не правильно ', 0),
(618, 167, 'Не правильно', 0),
(619, 168, 'Правильно', 1),
(620, 168, 'Не правильно ', 0),
(621, 169, 'Правильно ', 1),
(622, 169, 'Правильно ', 1),
(623, 169, 'Не правильно ', 0),
(624, 170, 'Правильно', 1),
(625, 170, 'Не правильно ', 0),
(626, 170, 'Не правильно', 0),
(627, 170, 'Не правильно', 0),
(628, 170, 'Не правильно', 0),
(629, 171, 'Формальні ', 1),
(630, 171, 'Динамічні методи', 0),
(631, 171, 'Гібридні методи', 0),
(632, 171, 'Статичні методи', 0),
(633, 172, 'Збірне поняття для всіх видів тестування, спрямованих на перевірку вже протестованої системи. Здійснюється після внесення в уже протестоване програмне забезпечення будь-яких змін', 1),
(634, 172, 'Оцінка вразливості програмного забезпечення до різного роду атак і несанкціонованих дій.', 0),
(635, 172, 'Тестування роботи системи в умовах різного роду навантажень, тобто визначення залежності продуктивності системи від робочого навантаження', 0),
(636, 172, 'Поверхнева перевірка всіх модулів системи на наявність критичних і блокуючих помилок', 0),
(637, 173, 'Об`єднання кількох понять в нове поняття, істотні ознаки нового поняття при цьому можуть бути або сумою компонент або істотно новими', 1),
(638, 173, 'Декомпозиція рішення для виділеного спектра завдань домену на підсистеми або ієрархію підсистем', 0),
(639, 173, 'Визначення системи в термінах обчислювальних складових (підсистем) і інтерфейсів між ними, яке відображає правила декомпозиції проблеми на складові', 0),
(640, 173, 'Відповідні варіації складу виділених компонент', 0),
(641, 174, 'Відношення розширення пов`язує тільки два варіанти використання', 1),
(642, 174, 'Відношення розширення пов`язує актора з окремим варіантом використання', 0),
(643, 174, 'Відношення розширення пов`язує окремих акторів між собою', 0),
(644, 174, 'Відношення розширення пов`язує між собою варіант використання та бізнес-систему', 0),
(645, 175, 'Визначення функціональних можливостей системи, призначених для користувача,  вимог до надійності та безпеки,  вимог до зовнішніх інтерфейсів', 1),
(646, 175, 'Визначення інформаційної системи', 0),
(647, 175, 'Визначення вимог до інтерфейсу', 0),
(648, 175, 'Визначення вимог до надійності, безпеки, структури інформаційної системи', 0),
(649, 176, '1 .. *,  (0: 1)', 1),
(650, 176, '(0: 1), 1: n', 0),
(651, 176, '1: n, 1 .. *', 0),
(652, 176, '0..1, 1 .. *', 0),
(653, 177, 'Забезпечення відповідності розробки вимогам її замовників;', 1),
(654, 177, 'Перевірка правильності трансформації проекту в програму;', 0),
(655, 177, 'Дії на кожній стадії життєвого циклу з перевірки і підтвердження відповідності стандартам;', 0),
(656, 177, 'Виявлення всіх помилок', 0),
(657, 178, 'Діаграма топології мережі', 1),
(658, 178, 'Діаграма DFD', 0),
(659, 178, 'Діаграма структури бази даних', 0),
(660, 178, 'Діаграма кооперації', 0),
(661, 179, 'Еліпс', 1),
(662, 179, 'Ромб', 0),
(663, 179, 'Квадрат', 0),
(664, 179, 'Прямокутник', 0),
(665, 180, 'До одного об`єкту відносяться одночасно кілька обмежень', 1),
(666, 180, 'Одночасно кілька сторожових умов мають значення \"істина\"', 0),
(667, 180, 'Об`єкт приймає одночасно декілька повідомлень - может быть но не факт', 0),
(668, 180, 'Об`єкт має стереотип \"conflict\"', 0),
(669, 181, 'Каскадна або поетапна розробка', 1),
(670, 181, 'Ітераційна або інкрементна (еволюційна) модель', 0),
(671, 181, 'Гнучка методологія Agile – розробки', 0),
(672, 181, 'Спіральна методика', 0),
(673, 182, 'Відсутність стомлюваності при роботі з програмою, забезпечення підказок при ускладненнях з роботою у користувачів', 1),
(674, 182, 'Забезпечення дружнього інтерфейсу для роботи  кінцевого користувача, наявність контекстно-залежної  підказки для навчальної системи в складі про-грамного засобу, забезпеченність  документацією для освоєння і використання закладених в програмному засобі функціональних можливостей', 0),
(675, 182, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, відсутність монотонності при виконанні програми', 0),
(676, 182, 'Забезпечення дружнього інтерфейсу для роботи кінцевого користувача, ав-томатичного виправлення зроблених користувачем помилок', 0),
(677, 183, 'Об’єктно-орієнтоване  програмування', 1),
(678, 183, 'Структурне програмування', 0),
(679, 183, 'Алгебраїчне програмування', 0),
(680, 183, 'Подійно-орієнтоване  програмування', 0),
(681, 184, 'Підготовча робота, аналіз вимог до системи, проектування архітектури системи, аналіз вимог до програмного забезпечення, проектування архітектури ПЗ, детальне проектування ПЗ, кодування і тестування ПЗ, установка ПЗ, приймання ПЗ', 1),
(682, 184, 'Оформлення договору з замовником, оформлення проектної документації, створення програмного забезпечення, передача замовнику', 0),
(683, 184, 'Ознайомлення з предметною областю, створення документа «Технічне зав-дання», аналіз наявних програмних пакетів,  розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(684, 184, 'Ознайомлення з предметною областю, аналіз предметної області, формуван-ня вимог до ПЗ, розробка структури ПЗ, кодування і тестування, передача замовнику', 0),
(685, 185, 'Атрибут функціональності, який вказує на можливість уникнути  несанкціонованого доступу', 1),
(686, 185, 'Атрибут надійності, який вказує на здатність програми до перезапуску для повторного виконання', 0),
(687, 185, 'Атрибут  зручності, який визначає зусилля, необхідні для розпізнавання логічних концепцій та умови їх застосування', 0),
(688, 185, 'Атрибут достовірності, який вказує на якість та точність  реалізаці', 0),
(689, 186, 'Інструментарій технології програмування', 1),
(690, 186, 'Системне програмне забезпечення', 0),
(691, 186, 'Пакет прикладних програм', 0),
(692, 186, 'Операційна система', 0),
(693, 187, 'Методологія проектування інформаційних систем', 1),
(694, 187, 'Методологія проектування програмних засобів, а також набір інструментальних засобів, які дозволяють в наглядній формі моделювати предметну область, аналізувати цю модель на всіх етапах розробки і супроводу ', 0),
(695, 187, 'Методологія проектування предметної області задачі', 0),
(696, 187, 'Інструментарій технології програмування', 0),
(697, 188, 'Відображення  динаміки  змін стану кожного  класу об’єктів', 1),
(698, 188, 'Будь-який продукт діяльності спеціалістів з розробки програмного забезпе-чення', 0),
(699, 188, 'Результат помилок  розробника  у  вхідних або  проектних специфікаціях', 0),
(700, 188, 'Графічне уявлення елементів моделювання  системи', 0),
(701, 189, 'Розбивка рішення задачі', 1),
(702, 189, 'Розбивка системи на підсистеми', 0),
(703, 189, 'Розбивка програми на частини', 0),
(704, 189, 'Розбивка системи на головні функції та допоміжні функції', 0),
(705, 190, 'Термін працездатності програмного забезпечення', 1),
(706, 190, 'Термін створення програмного забезпечення', 0),
(707, 190, 'Термін експлуатації програмного продукту', 0),
(708, 190, 'Неперервний процес, який починається з моменту прийняття рішення про необхідность створення програмного забезпечення і закінчується в момент виводу  його з експлуатації', 0),
(709, 191, 'Правильно', 1),
(710, 191, 'Не правильно ', 0),
(711, 191, 'Не правильно', 0),
(712, 191, 'Не правильно', 0),
(713, 192, 'Правильно', 1),
(714, 192, 'Правильно ', 1),
(715, 192, 'Не правильно ', 0),
(716, 192, 'Не правильно', 0),
(717, 193, 'Правильно', 1),
(718, 193, 'Не правильно ', 0),
(719, 194, 'Правильно ', 1),
(720, 194, 'Правильно ', 1),
(721, 194, 'Не правильно ', 0),
(722, 195, 'Правильно', 1),
(723, 195, 'Не правильно ', 0),
(724, 195, 'Не правильно', 0),
(725, 195, 'Не правильно', 0),
(726, 195, 'Не правильно', 0);

-- --------------------------------------------------------

--
-- Структура таблицы `test_question`
--

CREATE TABLE `test_question` (
  `id` int(11) NOT NULL,
  `test_id` int(11) NOT NULL,
  `question` text NOT NULL,
  `type` varchar(15) DEFAULT 'checkbox'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `test_question`
--

INSERT INTO `test_question` (`id`, `test_id`, `question`, `type`) VALUES
(3, 2, 'Какого цвета снег', 'checkbox'),
(4, 2, 'Кто или что такой хомо самиенс', 'radio'),
(10, 1, 'Какого цвета снег', 'checkbox'),
(11, 1, 'Кто ил что такой хомо самиенс', 'radio'),
(12, 1, 'Программирование - это', 'checkbox'),
(13, 1, 'Кто ты по жизни', 'checkbox'),
(18, 18, 'Як називається модель розробки ПЗ,  де кожна ітерація відповідає створенню фрагмента або версії ПЗ, на якій уточнюються цілі та характеристики проекту, оцінюється якість отриманих результатів і плануються роботи наступної ітерації?', 'radio'),
(19, 18, 'Програмний продукт - це:', 'radio'),
(20, 19, 'Як називається модель розробки ПЗ,  де кожна ітерація відповідає створенню фрагмента або версії ПЗ, на якій уточнюються цілі та характеристики проекту, оцінюється якість отриманих результатів і плануються роботи наступної ітерації?', 'radio'),
(21, 19, 'Програмний продукт - це:', 'radio'),
(22, 19, 'CASE - технології (Computer Aided Software Engineering) - це:', 'radio'),
(23, 20, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(24, 20, 'Що таке димове тестування (smoke testing)?', 'radio'),
(25, 20, 'Архітектура програмної системи - це', 'radio'),
(26, 20, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(27, 20, 'Аналіз вимог до системи - це:', 'radio'),
(28, 20, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(29, 20, 'Верифікація - це', 'radio'),
(30, 20, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(31, 20, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(32, 20, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(33, 20, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(34, 20, 'Врахування людського фактора означає:', 'radio'),
(35, 20, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'radio'),
(36, 20, 'Процес розробки ПЗ складається з наступних основних частин:', 'radio'),
(37, 20, 'Зрозумілість це:', 'radio'),
(38, 20, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'radio'),
(39, 20, 'CASE – технології це:', 'radio'),
(40, 20, 'Артефакт —це:', 'radio'),
(41, 20, 'Декомпозиція – це: ', 'radio'),
(42, 20, 'Життєвий цикл програмного забезпечення – це:', 'radio'),
(43, 21, 'Як називається модель розробки ПЗ,  де кожна ітерація відповідає створенню фрагмента або версії ПЗ, на якій уточнюються цілі та характеристики проекту, оцінюється якість отриманих результатів і плануються роботи наступної ітерації?', 'radio'),
(44, 21, 'Програмний продукт - це:', 'radio'),
(45, 21, 'CASE - технології (Computer Aided Software Engineering) - це:', 'radio'),
(46, 21, 'Програмний продукт розробляється на основі', 'radio'),
(47, 21, 'Комунікативність програмних продуктів заснована на:', 'radio'),
(48, 21, 'Основним нормативним документом, що регламентує життєвий цикл ПЗ є:', 'radio'),
(49, 21, 'Яку розробку ПЗ дозволяє впровадити Scrum?', 'radio'),
(50, 21, 'Основні процеси життєвого циклу', 'radio'),
(51, 21, 'Події - це:', 'radio'),
(52, 21, 'Яка властивість ООП вказує на те що об’єкт вміщує не тільки дані, але і правила їх обробки?', 'radio'),
(53, 21, 'Аналіз вимог – це:', 'radio'),
(54, 21, 'Зрозумілість - це', 'radio'),
(55, 21, 'При конструюванні  програмного забезпечення  на етапі розробки або  ви-бору алгоритму  рішення реалізується наступне:', 'radio'),
(56, 21, 'Яке обмеження означає, що в даному відношенні узагальнення окремі екземпляри класів-нащадків можуть належати одночасно декільком класам?', 'radio'),
(57, 21, 'Послідовність етапів роботи згідно з  каскадною  моделлю:', 'radio'),
(58, 21, 'Критерії якості, які  пред`являються до програми:', 'radio'),
(59, 21, 'Ефективність програмного продукту оцінюється:', 'radio'),
(60, 21, 'Методи - це:', 'radio'),
(61, 21, 'Надійність роботи програмного продукту визначається:', 'radio'),
(62, 21, 'Властивості об`єкта - це:', 'radio'),
(63, 22, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(64, 22, 'Що таке димове тестування (smoke testing)?', 'radio'),
(65, 22, 'Архітектура програмної системи - це', 'radio'),
(66, 22, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(67, 22, 'Аналіз вимог до системи - це:', 'radio'),
(68, 22, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(69, 22, 'Верифікація - це', 'radio'),
(70, 22, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(71, 22, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(72, 22, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(73, 22, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(74, 22, 'Врахування людського фактора означає:', 'radio'),
(75, 22, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'radio'),
(76, 22, 'Процес розробки ПЗ складається з наступних основних частин:', 'radio'),
(77, 22, 'Зрозумілість це:', 'radio'),
(78, 22, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'radio'),
(79, 22, 'CASE – технології це:', 'radio'),
(80, 22, 'Артефакт —це:', 'radio'),
(81, 22, 'Декомпозиція – це: ', 'radio'),
(82, 22, 'Життєвий цикл програмного забезпечення – це:', 'radio'),
(83, 23, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(84, 23, 'Що таке димове тестування (smoke testing)?', 'radio'),
(85, 23, 'Архітектура програмної системи - це', 'radio'),
(86, 23, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(87, 23, 'Аналіз вимог до системи - це:', 'radio'),
(88, 23, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(89, 23, 'Верифікація - це', 'radio'),
(90, 23, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(91, 23, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(92, 23, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(93, 23, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(94, 23, 'Врахування людського фактора означає:', 'radio'),
(95, 23, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'radio'),
(96, 23, 'Процес розробки ПЗ складається з наступних основних частин:', 'radio'),
(97, 23, 'Зрозумілість це:', 'radio'),
(98, 23, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'radio'),
(99, 23, 'CASE – технології це:', 'radio'),
(100, 23, 'Артефакт —це:', 'radio'),
(101, 23, 'Декомпозиція – це: ', 'radio'),
(102, 23, 'Життєвий цикл програмного забезпечення – це:', 'radio'),
(103, 24, 'Як називається модель розробки ПЗ,  де кожна ітерація відповідає створенню фрагмента або версії ПЗ, на якій уточнюються цілі та характеристики проекту, оцінюється якість отриманих результатів і плануються роботи наступної ітерації?', 'radio'),
(104, 24, 'Програмний продукт - це:', 'radio'),
(105, 24, 'CASE - технології (Computer Aided Software Engineering) - це:', 'radio'),
(106, 24, 'Програмний продукт розробляється на основі', 'radio'),
(107, 24, 'Комунікативність програмних продуктів заснована на:', 'radio'),
(108, 24, 'Основним нормативним документом, що регламентує життєвий цикл ПЗ є:', 'radio'),
(109, 24, 'Яку розробку ПЗ дозволяє впровадити Scrum?', 'radio'),
(110, 24, 'Основні процеси життєвого циклу', 'radio'),
(111, 24, 'Події - це:', 'radio'),
(112, 24, 'Яка властивість ООП вказує на те що об’єкт вміщує не тільки дані, але і правила їх обробки?', 'radio'),
(113, 24, 'Аналіз вимог – це:', 'radio'),
(114, 24, 'Зрозумілість - це', 'radio'),
(115, 24, 'При конструюванні  програмного забезпечення  на етапі розробки або  ви-бору алгоритму  рішення реалізується наступне:', 'radio'),
(116, 24, 'Яке обмеження означає, що в даному відношенні узагальнення окремі екземпляри класів-нащадків можуть належати одночасно декільком класам?', 'radio'),
(117, 24, 'Послідовність етапів роботи згідно з  каскадною  моделлю:', 'radio'),
(118, 24, 'Критерії якості, які  пред`являються до програми:', 'radio'),
(119, 24, 'Ефективність програмного продукту оцінюється:', 'radio'),
(120, 24, 'Методи - це:', 'radio'),
(121, 24, 'Надійність роботи програмного продукту визначається:', 'radio'),
(122, 24, 'Властивості об`єкта - це:', 'radio'),
(123, 25, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(124, 25, 'Що таке димове тестування (smoke testing)?', 'radio'),
(125, 25, 'Архітектура програмної системи - це', 'radio'),
(126, 25, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(127, 25, 'Аналіз вимог до системи - це:', 'radio'),
(128, 25, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(129, 25, 'Верифікація - це', 'radio'),
(130, 25, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(131, 25, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(132, 25, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(133, 25, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(134, 25, 'Врахування людського фактора означає:', 'radio'),
(135, 25, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'radio'),
(136, 25, 'Процес розробки ПЗ складається з наступних основних частин:', 'radio'),
(137, 25, 'Зрозумілість це:', 'radio'),
(138, 25, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'radio'),
(139, 25, 'CASE – технології це:', 'radio'),
(140, 25, 'Артефакт —це:', 'radio'),
(141, 25, 'Декомпозиція – це: ', 'radio'),
(142, 25, 'Життєвий цикл програмного забезпечення – це:', 'radio'),
(143, 27, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(144, 27, 'Що таке димове тестування (smoke testing)?', 'radio'),
(145, 27, 'Архітектура програмної системи - це', 'radio'),
(146, 27, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(147, 27, 'Аналіз вимог до системи - це:', 'radio'),
(148, 27, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(149, 27, 'Верифікація - це', 'radio'),
(150, 27, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(151, 27, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(152, 27, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(153, 27, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(154, 27, 'Врахування людського фактора означає:', 'radio'),
(155, 27, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'checkbox'),
(156, 27, 'Процес розробки ПЗ складається з наступних основних частин:', 'checkbox'),
(157, 27, 'Зрозумілість це:', 'checkbox'),
(158, 27, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'checkbox'),
(159, 27, 'CASE – технології це:', 'checkbox'),
(160, 27, 'Артефакт —це:', 'checkbox'),
(161, 27, 'Декомпозиція – це: ', 'checkbox'),
(162, 27, 'Життєвий цикл програмного забезпечення – це:', 'checkbox'),
(163, 28, 'Уровень сложности теста', 'radio'),
(164, 28, 'Какой сайт', 'checkbox'),
(165, 28, 'Я', 'checkbox'),
(166, 30, 'Вопрос №1', 'radio'),
(167, 30, 'Вопрос №2', 'checkbox'),
(168, 30, 'Вопрос №3', 'radio'),
(169, 30, 'Вопрос №4', 'checkbox'),
(170, 30, 'Вопрос №5', 'radio'),
(171, 31, 'До яких методів аналізу програмного забезпечення відносять дедуктивну верифікацію і верифікацію на основі перевірки моделі?', 'radio'),
(172, 31, 'Що таке димове тестування (smoke testing)?', 'radio'),
(173, 31, 'Архітектура програмної системи - це', 'radio'),
(174, 31, 'Яке  висловлювання є правильним стосовно відношення розширення?', 'radio'),
(175, 31, 'Аналіз вимог до системи - це:', 'radio'),
(176, 31, 'Вкажіть правильні записи кратності (multiplicity) кінця асоціації на діаграмі класів?', 'radio'),
(177, 31, 'Верифікація - це', 'radio'),
(178, 31, 'Яка з перерахованих діаграм відносяться до канонічних в мові UML?', 'radio'),
(179, 31, 'Який графічний символ використовують для зображення варіантів використання (use case) на діаграмі варіантів використання?', 'radio'),
(180, 31, 'Коли виникає конфлікт розгалуження на діаграмі послідовності?', 'radio'),
(181, 31, 'Методологія розробки програмного продукту, яка дозволяє паралельно виконувати ряд завдань з безперервним аналізом результатів і коригуванням попередніх етапів роботи, при цьому проект в кожній фазі розвитку проходить цикл PDCA: Планування - Реалізація - Перевірка — Оцінка, називається:', 'radio'),
(182, 31, 'Врахування людського фактора означає:', 'radio'),
(183, 31, 'Що з перерахованого не є одним з методів  проектування програмного забезпечення?', 'radio'),
(184, 31, 'Процес розробки ПЗ складається з наступних основних частин:', 'radio'),
(185, 31, 'Зрозумілість це:', 'radio'),
(186, 31, 'Комплекс взаємопов’язаних програм для вирішення задач певного класу конкретної предметної області:', 'radio'),
(187, 31, 'CASE – технології це:', 'radio'),
(188, 31, 'Артефакт —це:', 'radio'),
(189, 31, 'Декомпозиція – це: ', 'radio'),
(190, 31, 'Життєвий цикл програмного забезпечення – це:', 'radio'),
(191, 32, 'Запитання №1', 'radio'),
(192, 32, 'Запитання №2', 'checkbox'),
(193, 32, 'Запитання №3', 'radio'),
(194, 32, 'Запитання №4', 'checkbox'),
(195, 32, 'Запитання №5', 'radio');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `name` varchar(500) NOT NULL DEFAULT '',
  `mail` varchar(250) NOT NULL DEFAULT '',
  `login` varchar(250) NOT NULL DEFAULT '',
  `password` varchar(250) NOT NULL DEFAULT '',
  `lvl` int(11) NOT NULL DEFAULT '-1',
  `date` varchar(10) NOT NULL DEFAULT '2019-01-01'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `name`, `mail`, `login`, `password`, `lvl`, `date`) VALUES
(1, 'Admin1', 'admin1@mail.ua', 'Admin1', 'admin1', 1, '2019-05-12'),
(12, 'Admin0', 'admin0@mail', 'Admin0', 'admin0', 0, '2019-01-01'),
(14, 'Admin2', 'admin2@mail', 'Admin2', 'admin2', 2, '2019-05-12'),
(18, 'Владимир', 'malyuzhenko.vladimir@gmail.com', 'BugsBunny', '1234506a', 0, '2019-06-18'),
(20, 'Шаульский Максим', 'shaultach@gmail.com', 'smile', '123321', 2, '2019-06-22'),
(21, 'Янишевский', 'yanyshivskyislavik@gmail.com', 'Slavik', '228', 1, '2019-06-22');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `lab`
--
ALTER TABLE `lab`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `lecture`
--
ALTER TABLE `lecture`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `student_statist`
--
ALTER TABLE `student_statist`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `test`
--
ALTER TABLE `test`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `test_answer`
--
ALTER TABLE `test_answer`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `test_question`
--
ALTER TABLE `test_question`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `lab`
--
ALTER TABLE `lab`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT для таблицы `lecture`
--
ALTER TABLE `lecture`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `student_statist`
--
ALTER TABLE `student_statist`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=156;

--
-- AUTO_INCREMENT для таблицы `test`
--
ALTER TABLE `test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=33;

--
-- AUTO_INCREMENT для таблицы `test_answer`
--
ALTER TABLE `test_answer`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=727;

--
-- AUTO_INCREMENT для таблицы `test_question`
--
ALTER TABLE `test_question`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=196;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
